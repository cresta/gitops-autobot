apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gitops-autobot.fullname" . }}
  labels:
    {{- include "gitops-autobot.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "gitops-autobot.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "gitops-autobot.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "gitops-autobot.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.autobot.envSecrets }}
          envFrom:
            - secretRef:
                name: {{ .Values.autobot.envSecrets }}
          {{- end }}
          env:
            {{- if .Values.autobot.logLevel }}
            - name: LOG_LEVEL
              value: {{ .Values.autobot.logLevel | quote }}
            {{- end }}
            {{- if .Values.autobot.configFile }}
            - name: GITOPS_CONFIG_FILE
              value: {{ .Values.autobot.configFile | quote }}
            {{- end }}
            {{- if .Values.autobot.cronInterval }}
            - name: CRON_INTERVAL
              value: {{ .Values.autobot.cronInterval | quote }}
            {{- end }}
            {{- if .Values.autobot.tracer }}
            - name: TRACER
              value: {{ .Values.autobot.tracer | quote }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
{{- if .Values.extraVolumeMounts }}
          volumeMounts:
{{ toYaml .Values.extraVolumeMounts | indent 12 }}
{{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- if .Values.extraVolumes }}
      volumes:
{{ toYaml .Values.extraVolumes | indent 6 }}
{{- end }}
